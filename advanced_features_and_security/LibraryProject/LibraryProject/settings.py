"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os


"""
SECURITY MEASURES IMPLEMENTED:

1. DEBUG = False in production.
2. ALLOWED_HOSTS restricts requests to known domains.
3. Browser protections enabled:
   - SECURE_BROWSER_XSS_FILTER
   - SECURE_CONTENT_TYPE_NOSNIFF
   - X_FRAME_OPTIONS
4. Cookies are HTTPS-only:
   - CSRF_COOKIE_SECURE
   - SESSION_COOKIE_SECURE
5. HSTS enabled for HTTPS enforcement.
6. CSP headers restrict external resource loading to trusted sources.
7. CSRF protection enabled in all forms via {% csrf_token %}.
8. Django ORM used to prevent SQL injection.
"""

"""
# ===============================
# HTTPS & SECURE HEADERS SETTINGS
# ===============================

# Redirect all HTTP requests to HTTPS
SECURE_SSL_REDIRECT = True
# WHY: Forces every request to be redirected to HTTPS, ensuring encrypted communication.

# HTTP Strict Transport Security (HSTS)
SECURE_HSTS_SECONDS = 31536000  # 1 year
# WHY: Tells browsers to only connect to the site using HTTPS for the next year.
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# WHY: Extends HSTS enforcement to all subdomains.
SECURE_HSTS_PRELOAD = True
# WHY: Allows the domain to be included in browsers’ HSTS preload lists for even stricter enforcement.

# Secure cookies
SESSION_COOKIE_SECURE = True
# WHY: Ensures session cookies are only sent over HTTPS.
CSRF_COOKIE_SECURE = True
# WHY: Ensures CSRF cookies are only sent over HTTPS.

# Secure headers
X_FRAME_OPTIONS = 'DENY'
# WHY: Prevents clickjacking attacks by disallowing the site to be embedded in an iframe.
SECURE_CONTENT_TYPE_NOSNIFF = True
# WHY: Prevents browsers from guessing file MIME types, protecting from certain attacks.
SECURE_BROWSER_XSS_FILTER = True
# WHY: Enables browser’s XSS filter to block simple cross-site scripting attacks.

"""



"""
# ===============================
# Proxy SSL Header
# ===============================
# This setting tells Django to trust the X-Forwarded-Proto header sent by a proxy
# (e.g., Nginx, Apache) to determine whether the original request was HTTPS.
# This is required when SECURE_SSL_REDIRECT is enabled behind a reverse proxy.

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

"""

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i=p48)l2lzfez#bhl*0q-34-=iv#@i2unoc&-uk^1m7wmr*u^-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'bookshelf',
    'relationship_app',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = 'bookshelf.CustomUser'

MIDDLEWARE.insert(0, 'LibraryProject.middleware.CSPMiddleware')
